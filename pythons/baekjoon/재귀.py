"""
재귀
- 팩토리얼 (10872)
- 피보나치 수 5 (10870)
- 재귀함수가 뭔가요? (17478)
- 별찍기 10 (2447)
- 하노이 탑 이동 순서 (11729)
"""
import sys
"""
<10872>
팩토리얼(!)
0보다 크거나 같은 정수 N이 주어진다. 이때, N!을 출력하는 프로그램을 작성하시오.

[input]
10
0

[output]
3628800
1
"""

# n = int(sys.stdin.readline())

# def facto(n):
#     result = 1 
#     if n > 0:
#         result =  n * facto(n-1)
#     return result
# print(facto(n))

"""
<10870>
피보나치 수 5

n=17일때 까지 피보나치 수를 써보면 다음과 같다.
0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597
n이 주어졌을 때, n번째 피보나치 수를 구하는 프로그램을 작성하시오.

피보나치 수 :  0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.
Fn = Fn-1 + Fn-2 (n ≥ 2)

[input]
10

[output]
55
"""

# n = int(sys.stdin.readline())
# p = [0,1]

# def fbo(n):
#     for i, num in enumerate(p):
#         if i < 1:
#             pass
#         else :
#             p.append(p[i]+p[i-1])

#         if i == n:
#             return p[i]

# print(fbo(n))

# def fibonacci(n):
#     if n <= 1:
#         return N
#     return fibonacci(n-1) + fibonacci(n-2)

# print(fibonacci(n))


"""
<17478>
재귀함수가 뭔가요?

재귀함수 응답 문제

[input]
2

[output]
~~~
"""


# n = int(input())

# def recur(i, n):
#     print("____"*i + '"재귀함수가 뭔가요?"')
#     if i == n:
#         print("____"*i + '"재귀함수는 자기 자신을 호출하는 함수라네"')
#     else:
#         print("____"*i + '"잘 들어보게. 옛날옛날 한 산 꼭대기에 이세상 모든 지식을 통달한 선인이 있었어.')
#         print("____"*i + "마을 사람들은 모두 그 선인에게 수많은 질문을 했고, 모두 지혜롭게 대답해 주었지.")
#         print("____"*i + '그의 답은 대부분 옳았다고 하네. 그런데 어느 날, 그 선인에게 한 선비가 찾아와서 물었어."')
#         recur(i+1, n)
#     print("____"*i + "라고 답변하였지.")


# print("어느 한 컴퓨터공학과 학생이 유명한 교수님을 찾아가 물었다.")
# recur(0, n)

"""
<2447>
별찍기 - 10

***
* *
***

위 패턴으로 N이 3보다 클 경우,
 크기 N의 패턴은 공백으로 채워진 가운데의 (N/3)×(N/3) 정사각형을 크기 N/3의 패턴으로 둘러싼 형태이다. 

[input]
27

[output]
~~~
"""

star = """***\n* *\n***"""

def star10(n, star):
    if n > 3:
        width = n / 3
        print(f"{star}*width")




"""
<11729>
하노이 탑 이동 순서

세 개의 장대가 있고 첫 번째 장대에는 반경이 서로 다른 n개의 원판이 쌓여 있다.
각 원판은 반경이 큰 순서대로 쌓여있다.
이제 수도승들이 다음 규칙에 따라 첫 번째 장대에서 세 번째 장대로 옮기려 한다.

한 번에 한 개의 원판만을 다른 탑으로 옮길 수 있다.
쌓아 놓은 원판은 항상 위의 것이 아래의 것보다 작아야 한다.
이 작업을 수행하는데 필요한 이동 순서를 출력하는 프로그램을 작성하라. 
단, 이동 횟수는 최소가 되어야 한다.

[input]
# 원판의 갯수
3

[output]
# 첫째 줄 옮긴 횟수
# 수행과정 (이는 A번째 탑의 가장 위에 있는 원판을 B번째 탑의 가장 위로 옮긴다는 뜻이다.)
7
1 3
1 2
3 2
1 3
2 1
2 3
1 3
"""